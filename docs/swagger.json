{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Authentication and Authorization Service",
        "title": "Regilex Auth-Service API",
        "contact": {
            "name": "Keyspecs",
            "url": "http://www.keysepec.com/",
            "email": "obed@keyspecs.com"
        },
        "version": "0.01"
    },
    "host": "api.dev.regilex.com",
    "basePath": "/auth/api",
    "paths": {
        "/healthcheck": {
            "get": {
                "description": "Get the status of server and version",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Login user with the accepted type email, wechat or phone\nFor type email: only send email and password\nFor type phone: only send phone_code and number\nFor type wechat: only send code, encrypted_data and iv",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.APIRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/logout": {
            "post": {
                "description": "Logout user with access token\nAdd Bearer prefix before Authorization value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/refresh": {
            "post": {
                "description": "Refresh user's access and refresh tokens\nAdd Bearer prefix before Authorization value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Refresh tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh Token",
                        "name": "X-Request-Token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer + Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/register": {
            "post": {
                "description": "Register user with the accepted type email, wechat or phone\nFor type email: only send email and password\nFor type phone: only send phone_code and number\nFor type wechat: only send code, encrypted_data and iv",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.APIRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/update": {
            "put": {
                "description": "Logout user with access token\nAdd Bearer prefix before Authorization value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Update Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/verify": {
            "post": {
                "description": "Logout user with access token\nAdd Bearer prefix before Authorization value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1"
                ],
                "summary": "Verify User's Email",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VerifyEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIRequest": {
            "type": "object",
            "required": [
                "payload",
                "type"
            ],
            "properties": {
                "payload": {
                    "$ref": "#/definitions/model.Payload"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.APIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "model.Payload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "model.VerifyEmailRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "ctx": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        }
    }
}